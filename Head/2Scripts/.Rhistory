data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
View(data)
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
### 7 analysis with 22 values
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
# if GeneCodedOnLightChain == 1, it means that tRNA after transcription is identical to heavy chain => G and T rich (due to to common transitions: A>G, C>T)
# althougth non-significant, TimeBeingSingleStrangedForAll has positive coefficient, which is expected
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
View(data)
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + GenerationLength_d, data = data))
str(data)
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*GenerationLength_d, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*GenerationLength_d, data = data))
summary(lm(-scale(gibbs) ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll)*scale(GenerationLength_d), data = data))
summary(lm(-scale(gibbs) ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll)*scale(GenerationLength_d), data = data))
summary(lm(-scale(gibbs) ~ 0 + scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll)*scale(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*GenerationLength_d, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + GenerationLength_d, data = data)) # PIC
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-scale(gibbs) ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll)*scale(log2(GenerationLength_d)), data = data))
summary(lm(-scale(gibbs) ~ 0 + scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll)*scale(log2(GenerationLength_d)), data = data))
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
MedianGenLength = median(Mammals$GenerationLength_d)
MedianGenLength
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= MedianGenLength) {Mammals$LongLived[i] = 0} }
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= MedianGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
###################################
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
MedianGenLength = median(Mammals$GenerationLength_d)
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= MedianGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + log2(TimeBeingSingleStrangedForAll) + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*LongLived, data = data))
###################################
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals and derive Longlived (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
quartile(Mammals$GenerationLength_d,0.5)
quantile(Mammals$GenerationLength_d,0.5)
ThresholdGenLength = quantile(Mammals$GenerationLength_d,0.75)
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= ThresholdGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
### 6 average Gibbs Energy for each tRNA
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
### 7 analysis with 22 values
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
# if GeneCodedOnLightChain == 1, it means that tRNA after transcription is identical to heavy chain => G and T rich (due to to common transitions: A>G, C>T)
# althougth non-significant, TimeBeingSingleStrangedForAll has positive coefficient, which is expected
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
### 8 analysis with whole dataset
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
# to do 1: introduce species factor into the model. glm
# to do 2: introduce species as species-specific generation length
# to do 3: PICs
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*LongLived, data = data))
###################################
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals and derive Longlived (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
ThresholdGenLength = quantile(Mammals$GenerationLength_d,0.25)
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= ThresholdGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
### 5 read annotation and merge with data
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
### 6 average Gibbs Energy for each tRNA
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
### 7 analysis with 22 values
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
# if GeneCodedOnLightChain == 1, it means that tRNA after transcription is identical to heavy chain => G and T rich (due to to common transitions: A>G, C>T)
# althougth non-significant, TimeBeingSingleStrangedForAll has positive coefficient, which is expected
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
### 8 analysis with whole dataset
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
# to do 1: introduce species factor into the model. glm
# to do 2: introduce species as species-specific generation length
# to do 3: PICs
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
###################################
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals and derive Longlived (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
ThresholdGenLength = quantile(Mammals$GenerationLength_d,0.10) # this work better than 0.5 or 0.75 => don't know why
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= ThresholdGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
### 5 read annotation and merge with data
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
### 6 average Gibbs Energy for each tRNA
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
### 7 analysis with 22 values
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
# if GeneCodedOnLightChain == 1, it means that tRNA after transcription is identical to heavy chain => G and T rich (due to to common transitions: A>G, C>T)
# althougth non-significant, TimeBeingSingleStrangedForAll has positive coefficient, which is expected
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
### 8 analysis with whole dataset
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
# to do 1: introduce species factor into the model. glm
# to do 2: introduce species as species-specific generation length
# to do 3: PICs
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
###################################
rm(list=ls(all=TRUE))
data = read.table("../../Body/2Derived/harvest.txt", header = TRUE)
names(data)
### 1 keep only 37
table(data$temp)
nrow(data) # 243476
data = data[data$temp == 37,]
nrow(data) # 81157
### 2 keep only normal tRNA
length(table(data$trna)) # 23 becaus there is 'local' ???
data[data$trna == 'local',]
nrow(data)
data = data[data$trna != 'local',]
nrow(data)
### 3 keep only tRNA with estimated Gibbs Energy (not NA)
str(data)
nrow(data)
data = data[!is.na(data$gibbs),]
nrow(data)
summary(data$gibbs)
### 4 keep only mammals and derive Longlived (!!!!!! not ideal!!!!)
Mammals = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", sep = '\t', header = TRUE)
Mammals$species = gsub(' ','_',Mammals$Scientific_name)
Mammals = Mammals[names(Mammals) %in% c('species','GenerationLength_d')]
ThresholdGenLength = quantile(Mammals$GenerationLength_d,0.25) # this work better than 0.5 or 0.75 => don't know why
Mammals$LongLived = 1
for (i in 1:nrow(Mammals))  { if (Mammals$GenerationLength_d[i] <= ThresholdGenLength) {Mammals$LongLived[i] = 0} }
table(Mammals$LongLived)
nrow(data)
data = merge(data,Mammals, by = 'species')
nrow(data)/22 # ~ 432 species
### 5 read annotation and merge with data
Annot = read.table("../../Body/2Derived/MammalianTrnaManualAnnotation.txt", sep = '\t', header = TRUE)
Annot$GeneCodedOnLightChain = as.numeric(as.factor(Annot$Chain))-1 # heavy = 0; light = 1
Annot = Annot[colnames(Annot) %in% c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll')]
nrow(data)
data = merge(data,Annot, by = 'trna')
nrow(data)
### 6 average Gibbs Energy for each tRNA
agg = aggregate(data$gibbs, by = list(data$trna,data$GeneCodedOnLightChain,data$TimeBeingSingleStrangedForAll), FUN = median)
names(agg) = c('trna','GeneCodedOnLightChain','TimeBeingSingleStrangedForAll','MedianGibbs')
agg = agg[order(agg$MedianGibbs),]
### 7 analysis with 22 values
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll, data = agg))
# if GeneCodedOnLightChain == 1, it means that tRNA after transcription is identical to heavy chain => G and T rich (due to to common transitions: A>G, C>T)
# althougth non-significant, TimeBeingSingleStrangedForAll has positive coefficient, which is expected
summary(lm(-MedianGibbs ~ GeneCodedOnLightChain*TimeBeingSingleStrangedForAll, data = agg)) # no interaction
### 8 analysis with whole dataset
summary(lm(-gibbs ~ GeneCodedOnLightChain+TimeBeingSingleStrangedForAll, data = data)) # strong effect of all
# to do 1: introduce species factor into the model. glm
# to do 2: introduce species as species-specific generation length
# to do 3: PICs
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + log2(GenerationLength_d), data = data)) # PIC
summary(lm(-gibbs ~ (GeneCodedOnLightChain + TimeBeingSingleStrangedForAll)*log2(GenerationLength_d), data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll*LongLived, data = data))
summary(lm(-gibbs ~ GeneCodedOnLightChain + TimeBeingSingleStrangedForAll + LongLived, data = data))  #### !!!!!!!!!!
summary(lm(-gibbs ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll) + scale(LongLived), data = data))  #### !!!!!!!!!!
summary(lm(-scale(gibbs) ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll) + scale(LongLived), data = data))  #### !!!!!!!!!!
summary(lm(-scale(gibbs) ~ 0 + scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll) + scale(LongLived), data = data))  #### !!!!!!!!!!
summary(lm(-gibbs ~ scale(GeneCodedOnLightChain) + scale(TimeBeingSingleStrangedForAll) + scale(LongLived), data = data))  #### !!!!!!!!!!
AllFiles = list.files("/../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/")
AllFiles
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
### harvest Gibbs Energies from individual files /../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/
AllFiles = list.files("/../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/")
AllFiles
AllFiles = list.files(path = "/../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/")
AllFiles
AllFiles = list.files(path = "/../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
str(AllFiles)
AllFiles = list.files(path = "/home/popadin/mito-trna/Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
AllFiles
AllFiles = list.files(path = "../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
AllFiles
rm(list=ls(all=TRUE))
### harvest Gibbs Energies from individual files /../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/
AllFiles = list.files(path = "../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
length(AllFiles)
i = 1
AllFiles[i]
as.character(AllFiles[i])
data = read.table("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/AllFiles[i]", header = TRUE)
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
infile
data = read.table(infile, header = TRUE)
data = read.table(infile, header = FALSE)
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
data = read.table(infile, header = FALSE)
data = read.table(infile, header = FALSE,sep = '\t')
View(data)
data$V1[3]
data$V1[1]
data$V1[1]
str(data$V1[1])
unlist(strsplit(data$V1[1],'|'))
unlist(strsplit(data$V1[1],"\\|"))
unlist(strsplit(data$V1[1],"\\|"))[2]
MtDbId = unlist(strsplit(data$V1[1],"\\|"))[1]
MtDbId
unlist(strsplit(data$V1[1],"\\|"))
anticodon = unlist(strsplit(data$V1[1],"\\|"))[5]
data$V1[2]
sequence = data$V1[2]
SecondaryStructure = unlist(strsplit(data$V1[3]," "))[1]
SecondaryStructure
GibbsEnergy = unlist(strsplit(data$V1[3]," "))[2]
GibbsEnergy
GibbsEnergy = gsub('(','',GibbsEnergy)
GibbsEnergy = gsub("\\(",'',GibbsEnergy)
GibbsEnergy
GibbsEnergy = unlist(strsplit(data$V1[3]," "))[2]
GibbsEnergy = gsub("\\(",'',GibbsEnergy); GibbsEnergy = gsub("\\)",'',GibbsEnergy)
GibbsEnergy
str(GibbsEnergy)
GibbsEnergy = as.numeric(GibbsEnergy)
GibbsEnergy
i = 1
AllFiles[i]
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
data = read.table(infile, header = FALSE,sep = '\t')
id = unlist(strsplit(data$V1[1],"\\|"))[1]
id
id = gsub(">",'',id);
id
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
data = read.table(infile, header = FALSE,sep = '\t')
id = unlist(strsplit(data$V1[1],"\\|"))[1]; id = gsub(">",'',id);
species = unlist(strsplit(data$V1[1],"\\|"))[2]
position = unlist(strsplit(data$V1[1],"\\|"))[3]
tRna = unlist(strsplit(data$V1[1],"\\|"))[4]
anticodon = unlist(strsplit(data$V1[1],"\\|"))[5]
sequence = data$V1[2]
SecondaryStructure = unlist(strsplit(data$V1[3]," "))[1]
GibbsEnergy = unlist(strsplit(data$V1[3]," "))[2]
GibbsEnergy = gsub("\\(",'',GibbsEnergy); GibbsEnergy = gsub("\\)",'',GibbsEnergy)
GibbsEnergy = as.numeric(GibbsEnergy)
OneLine = c(id,species,position,tRna,anticodon,sequence,SecondaryStructure,GibbsEnergy)
Final=data.frame()
OneLine = c(id,species,position,tRna,anticodon,sequence,SecondaryStructure,GibbsEnergy)
OneLine
Final = rbind(Final,OneLine)
View(Final)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
Final = rbind(Final,OneLine)
View(Final)
rm(list=ls(all=TRUE))
### harvest Gibbs Energies from individual files /../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/
AllFiles = list.files(path = "../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
length(AllFiles)
Final=data.frame()
for (i in 1:length(AllFiles))
{ # i = 1
# AllFiles[i]
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
data = read.table(infile, header = FALSE,sep = '\t')
id = unlist(strsplit(data$V1[1],"\\|"))[1]; id = gsub(">",'',id);
species = unlist(strsplit(data$V1[1],"\\|"))[2]
position = unlist(strsplit(data$V1[1],"\\|"))[3]
tRna = unlist(strsplit(data$V1[1],"\\|"))[4]
anticodon = unlist(strsplit(data$V1[1],"\\|"))[5]
sequence = data$V1[2]
SecondaryStructure = unlist(strsplit(data$V1[3]," "))[1]
GibbsEnergy = unlist(strsplit(data$V1[3]," "))[2]
GibbsEnergy = gsub("\\(",'',GibbsEnergy); GibbsEnergy = gsub("\\)",'',GibbsEnergy)
GibbsEnergy = as.numeric(GibbsEnergy)
OneLine = c(id,species,position,tRna,anticodon,sequence,SecondaryStructure,GibbsEnergy)
Final = rbind(Final,OneLine)
}
names(Final)=c("id","species","position","tRna","anticodon","sequence","SecondaryStructure","GibbsEnergy")
View(Final)
nrow(Final[is.na(Final$GibbsEnergy),])
###################################
rm(list=ls(all=TRUE))
### harvest Gibbs Energies from individual files /../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/
AllFiles = list.files(path = "../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor")
length(AllFiles)
Final=data.frame()
for (i in 1:length(AllFiles))
{ # i = 1
# AllFiles[i]
infile = paste("../../Body/1Raw/5MitoTrnaDb/GibbsEnergyFromVictor/",AllFiles[i],sep='')
data = read.table(infile, header = FALSE,sep = '\t')
id = unlist(strsplit(data$V1[1],"\\|"))[1]; id = gsub(">",'',id);
species = unlist(strsplit(data$V1[1],"\\|"))[2]
position = unlist(strsplit(data$V1[1],"\\|"))[3]
tRna = unlist(strsplit(data$V1[1],"\\|"))[4]
anticodon = unlist(strsplit(data$V1[1],"\\|"))[5]
sequence = data$V1[2]
SecondaryStructure = unlist(strsplit(data$V1[3]," "))[1]
GibbsEnergy = unlist(strsplit(data$V1[3]," \\("))[2]
GibbsEnergy = gsub("\\(",'',GibbsEnergy); GibbsEnergy = gsub("\\)",'',GibbsEnergy)
GibbsEnergy = as.numeric(GibbsEnergy)
OneLine = c(id,species,position,tRna,anticodon,sequence,SecondaryStructure,GibbsEnergy)
Final = rbind(Final,OneLine)
}
names(Final)=c("id","species","position","tRna","anticodon","sequence","SecondaryStructure","GibbsEnergy")
nrow(Final[is.na(Final$GibbsEnergy),]) # 617
View(Final)
